name: GitHub Page

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  linux:
    name: Github-page - Linux - ${{ matrix.compiler }}
    runs-on: ubuntu-latest
    timeout-minutes:
      60
    container:
      image: buildpack-deps:bionic
    continue-on-error: ${{ matrix.allow-failure }}
    strategy:
      matrix:
        include:
          - compiler: ghc-9.2.2
            compilerKind: ghc
            compilerVersion: 9.2.2
            setup-method: ghcup
            allow-failure: false
      fail-fast: false
    steps:
      - name: apt
        run: |
          apt-get update
          apt-get install -y --no-install-recommends gnupg ca-certificates dirmngr curl git software-properties-common libtinfo5
          mkdir -p "$HOME/.ghcup/bin"
          curl -sL https://downloads.haskell.org/ghcup/0.1.17.5/x86_64-linux-ghcup-0.1.17.5 > "$HOME/.ghcup/bin/ghcup"
          chmod a+x "$HOME/.ghcup/bin/ghcup"
          "$HOME/.ghcup/bin/ghcup" install ghc "$HCVER"
          "$HOME/.ghcup/bin/ghcup" install cabal 3.6.2.0
        env:
          HCKIND: ${{ matrix.compilerKind }}
          HCNAME: ${{ matrix.compiler }}
          HCVER: ${{ matrix.compilerVersion }}
      - name: Set PATH and environment variables
        run: |
          echo "$HOME/.cabal/bin" >> $GITHUB_PATH
          echo "LANG=C.UTF-8" >> "$GITHUB_ENV"
          echo "CABAL_DIR=$HOME/.cabal" >> "$GITHUB_ENV"
          echo "CABAL_CONFIG=$HOME/.cabal/config" >> "$GITHUB_ENV"
          HCDIR=/opt/$HCKIND/$HCVER
          HC=$HOME/.ghcup/bin/$HCKIND-$HCVER
          echo "HC=$HC" >> "$GITHUB_ENV"
          echo "HCPKG=$HOME/.ghcup/bin/$HCKIND-pkg-$HCVER" >> "$GITHUB_ENV"
          echo "HADDOCK=$HOME/.ghcup/bin/haddock-$HCVER" >> "$GITHUB_ENV"
          echo "CABAL=$HOME/.ghcup/bin/cabal-3.6.2.0 -vnormal+nowrap" >> "$GITHUB_ENV"
          HCNUMVER=$(${HC} --numeric-version|perl -ne '/^(\d+)\.(\d+)\.(\d+)(\.(\d+))?$/; print(10000 * $1 + 100 * $2 + ($3 == 0 ? $5 != 1 : $3))')
          echo "HCNUMVER=$HCNUMVER" >> "$GITHUB_ENV"
          echo "ARG_TESTS=--enable-tests" >> "$GITHUB_ENV"
          echo "ARG_BENCH=--enable-benchmarks" >> "$GITHUB_ENV"
          echo "HEADHACKAGE=false" >> "$GITHUB_ENV"
          echo "ARG_COMPILER=--$HCKIND --with-compiler=$HC" >> "$GITHUB_ENV"
          echo "GHCJSARITH=0" >> "$GITHUB_ENV"
        env:
          HCKIND: ${{ matrix.compilerKind }}
          HCNAME: ${{ matrix.compiler }}
          HCVER: ${{ matrix.compilerVersion }}
      - name: env
        run: |
          env
      - name: write cabal config
        run: |
          mkdir -p $CABAL_DIR
          cat >> $CABAL_CONFIG <<EOF
          remote-build-reporting: anonymous
          write-ghc-environment-files: never
          remote-repo-cache: $CABAL_DIR/packages
          logs-dir:          $CABAL_DIR/logs
          world-file:        $CABAL_DIR/world
          extra-prog-path:   $CABAL_DIR/bin
          symlink-bindir:    $CABAL_DIR/bin
          installdir:        $CABAL_DIR/bin
          build-summary:     $CABAL_DIR/logs/build.log
          store-dir:         $CABAL_DIR/store
          install-dirs user
            prefix: $CABAL_DIR
          repository hackage.haskell.org
            url: http://hackage.haskell.org/
          EOF
          cat >> $CABAL_CONFIG <<EOF
          program-default-options
            ghc-options: $GHCJOBS +RTS -M3G -RTS
          EOF
          cat $CABAL_CONFIG
      - name: versions
        run: |
          $HC --version || true
          $HC --print-project-git-commit-id || true
          $CABAL --version || true
      - name: update cabal index
        run: |
          $CABAL v2-update -v
      - name: install cabal-plan
        run: |
          mkdir -p $HOME/.cabal/bin
          curl -sL https://github.com/haskell-hvr/cabal-plan/releases/download/v0.6.2.0/cabal-plan-0.6.2.0-x86_64-linux.xz > cabal-plan.xz
          echo 'de73600b1836d3f55e32d80385acc055fd97f60eaa0ab68a755302685f5d81bc  cabal-plan.xz' | sha256sum -c -
          xz -d < cabal-plan.xz > $HOME/.cabal/bin/cabal-plan
          rm -f cabal-plan.xz
          chmod a+x $HOME/.cabal/bin/cabal-plan
          cabal-plan --version
      - name: checkout
        uses: actions/checkout@v2
        with:
          path: source
      - name: copy cabal.project
        run: |
          touch cabal.project
          echo "packages: $GITHUB_WORKSPACE/source/." >> cabal.project
          cat cabal.project

      - name: install dependencies
        run: |
          $CABAL v2-build $ARG_COMPILER --disable-tests --disable-benchmarks --dependencies-only -j2 all
          $CABAL v2-build $ARG_COMPILER $ARG_TESTS $ARG_BENCH --dependencies-only -j2 all

      - name: Haddock Badge
        run: |
          mkdir --parents pages/docs/
          $CABAL v2-haddock $ARG_COMPILER --with-haddock $HADDOCK --htmldir pages/docs/ all > haddock.raw.txt
          grep ") in " haddock.raw.txt | sort -hr > haddock.txt
          COVERAGE=$(awk '{good += $3; total += $5} END {printf "%.0f", good/total*100}' haddock.txt)
          echo "\
            { \"schemaVersion\": 1, \
              \"label\": \"api docs\", \
              \"message\": \"$COVERAGE%\", \
              \"color\": \"success\" \
              }" > haddock_badge.json

          cp haddock.txt pages/docs/
          cp haddock_badge.json pages/docs/
          cat haddock.txt
          cat haddock_badge.json

      - name: Deploy ðŸš€
        if: github.ref == 'refs/heads/master'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: docs # The branch the action should deploy to.
          FOLDER: pages # The folder the action should deploy.
